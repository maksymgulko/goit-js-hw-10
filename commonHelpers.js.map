{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = new Date();\nconst myInput = document.querySelector('#datetime-picker');\nconst submitBtn = document.querySelector('[data-start]');\nsubmitBtn.disabled = true;\nconst daysCounter = document.querySelector('[data-days]');\nconst hoursCounter = document.querySelector('[data-hours]');\nconst minutesCounter = document.querySelector('[data-minutes]');\nconst secondsCounter = document.querySelector('[data-seconds]');\nconst flatPickr = flatpickr(myInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    dateCheck();\n  },\n}); // flatpickr\n\nfunction dateCheck() {\n  const currentDate = Date.now();\n  if (currentDate > userSelectedDate) {\n    iziToast.show({\n      message: 'Please choose a date in the future',\n      position: 'topCenter',\n    });\n    submitBtn.disabled = true;\n  } else {\n    submitBtn.disabled = false;\n  }\n}\n\nsubmitBtn.addEventListener('click', event => {\n  const timer = setInterval(() => {\n    const timeDiff = userSelectedDate.getTime() - Date.now();\n    const countdown = convertMs(timeDiff);\n    if (timeDiff <= 0) {\n      clearInterval(timer);\n      submitBtn.disabled = false;\n    } else {\n      daysCounter.innerHTML = countdown.days.toString().padStart(2, '0');\n      hoursCounter.innerHTML = countdown.hours.toString().padStart(2, '0');\n      minutesCounter.innerHTML = countdown.minutes.toString().padStart(2, '0');\n      secondsCounter.innerHTML = countdown.seconds.toString().padStart(2, '0');\n      submitBtn.disabled = true;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","myInput","submitBtn","daysCounter","hoursCounter","minutesCounter","secondsCounter","flatpickr","selectedDates","dateCheck","iziToast","event","timer","timeDiff","countdown","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2GAKA,IAAIA,EAAmB,IAAI,KAC3B,MAAMC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,cAAc,EACvDA,EAAU,SAAW,GACrB,MAAMC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAC5CC,EAAUN,EAAS,CACnC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAClCC,GACD,CACH,CAAC,EAED,SAASA,GAAY,CACC,KAAK,MACPT,GAChBU,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WAChB,CAAK,EACDR,EAAU,SAAW,IAErBA,EAAU,SAAW,EAEzB,CAEAA,EAAU,iBAAiB,QAASS,GAAS,CAC3C,MAAMC,EAAQ,YAAY,IAAM,CAC9B,MAAMC,EAAWb,EAAiB,QAAS,EAAG,KAAK,IAAG,EAChDc,EAAYC,EAAUF,CAAQ,EAChCA,GAAY,GACd,cAAcD,CAAK,EACnBV,EAAU,SAAW,KAErBC,EAAY,UAAYW,EAAU,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjEV,EAAa,UAAYU,EAAU,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACnET,EAAe,UAAYS,EAAU,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACvER,EAAe,UAAYQ,EAAU,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACvEZ,EAAU,SAAW,GAExB,EAAE,GAAI,CACT,CAAC,EAED,SAASa,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}